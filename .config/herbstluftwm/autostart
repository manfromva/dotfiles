#!/usr/bin/env bash

function run {
  if ! pgrep $1 ;
  then
    $@&
  fi
}

#herbstluftwm start
hc() {
    herbstclient "$@"
}

hc emit_hook reload

# KEYBINDINGS

# remove all existing keybindings
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1  # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

# hc keybind $Mod-Shift-x quit
# hc keybind $Mod-Shift-r reload
# hc keybind $Mod-Shift-q close
# hc keybind $Mod-q close

#Most of the keybindings have been set in sxhkd config file
#you can set them also here

#reload sxhkd - see keybind in sxhkd
#hc keybind $Mod-Shift-s  pkill -USR1 -x sxhkd

#change your keyboard if you need it - azerty or qwerty
#setxkbmap -layout be
keybLayout=$(setxkbmap -v | awk -F "+" '/symbols/ {print $2}')

if [ $keybLayout = "be" ]; then
  cp ~/.config/herbstluftwm/autostart-azerty ~/.config/herbstluftwm/autostart
else
  cp ~/.config/lherbstluftwm/autostart-qwerty ~/.config/herbstluftwm/autostart
fi

# MOVEMENTS

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients to ... on single Monitor
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# moving clients to ... on dual monitor
# hc keybind $Mod-Shift-h chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-Left chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-j chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-Down chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-k chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-Up chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-l chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-Right chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

# FRAMES

# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode
# remove frame
hc keybind $Mod-r remove

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# TAGS or WORKSPACES

tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    # horizontal tiling as standard
    hc set_layout horizontal
    hc set default_frame_layout 1
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done

# layouting
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus on ...
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         use_index +1 --skip-visible
hc keybind $Mod-Shift-Tab   use_index -1 --skip-visible
hc keybind Control-Mod1-Left    focus left
hc keybind Control-Mod1-Up      focus up
hc keybind Control-Mod1-Right   focus right
hc keybind Control-Mod1-Down    focus down
hc keybind Mod1-Tab         use_index +1 --skip-visible
hc keybind Mod1-Shift-Tab   use_index -1 --skip-visible
#hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#reset prior to setting the theme
hc attr theme.reset 1

# Attribute
hc attr theme.active.color '#6790EB'
hc attr theme.active.inner_color '#141414'
hc attr theme.active.outer_color '#6790EB'
hc attr theme.background_color '#141414'
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.inner_color black
hc attr theme.inner_width 1
hc attr theme.normal.color '#141414'
hc attr theme.urgent.color orange

# Set
hc set always_show_frame 1
hc set focus_follows_mouse 1
hc set frame_border_active_color '#6790EB'
hc set frame_border_normal_color '#141414'
hc set frame_bg_normal_color '#141414'
hc set frame_bg_active_color '#000000'
hc set frame_border_width 3
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 5
hc set frame_padding 0
hc set mouse_recenter_gap 0
hc set smart_frame_surroundings 1
hc set smart_window_surroundings 0
hc set tree_style '╾│ ├└╼─┐'
hc set window_gap 5


# RULES
hc unrule -F
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients

# hc rule class~'(spotify|pragha|clementine|deadbeef|audacious)' tag='Music' switchtag=on focus=on

# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
#hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' manage=off
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=Oblogout fullscreen=on
hc rule class=Insync pseudotile=on
hc rule class=VirtualBox fullscreen=on
#hc rule class=Archlinux-tweak-tool.py pseudotile=on
hc rule class=Arcolinux-welcome-app.py pseudotile=on
hc rule class=Arcolinux-calamares-tool.py pseudotile=on
hc rule windowrole=xfce4-terminal-dropdown floating=on
hc rule class=Indicator-stickynotes tag=9
hc rule class=obsidian tag=9
hc rule class=Emacs tag=8 fullscreen=on
hc rule class=Guake floating=on
hc rule class=koodo-reader tag=9 pseudotile=on

# unlock, just to be sure
hc unlock

#Dualmonitor setup
# Find out your monitor name with xrandr or arandr (save and you get this line)
xrandr --output eDP1 --primary --mode 2160x1350 --pos 0x0 --rotate normal --output DP1 --off --output DP2 --mode 1920x1080 --pos 2160x0 --rotate normal --output HDMI1 --off --output HDMI2 --off --output VIRTUAL1 --off

#Dualmonitor setup
# hc detect_monitors
# xrandr in a terminal and copy/paste your resolution in
# Determine a sane resolution for Linux guests.
# check if more than one screen
hc set_monitors 2160x1350+0+0 1920x1080+2160+0




count=$(xrandr --query | grep " connected" | cut -d" " -f1 | wc -l)
# sane defaults
local X_RES=1152
local Y_RES=648
if [ "${XDG_SESSION_TYPE}" == "x11" ]; then
  X_RES=$(xrandr --listmonitors | grep -v Monitors | cut -d' ' -f4 | cut -d'/' -f1 | sort | head -n1)
  Y_RES=$(xrandr --listmonitors | grep -v Monitors | cut -d' ' -f4 | cut -d'/' -f2 | cut -d'x' -f2 | sort | head -n1)
fi
  
if [ $count -gt 1 ]; then
  hc set_monitors $X_RES"x"$Y_RES"+0+0" $X_RES"x"$Y_RES"+"$X_RES"+0"
fi

#room for polybar on both monitors
#single polybar at top
hc pad 0 30
#second polybar at bottom
#hc pad 0 30 0 30 0
#single polybar at top
hc pad 1 30
#second polybar at bottom
#hc pad 1 30 0 30 0

#launching polybar
~/.config/polybar/liath/launch.sh


#Autostart applications
pkill -u $USER '^picom$'
picom  --config $HOME/.config/herbstluftwm/picom.conf &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
/usr/lib/xfce4/notifyd/xfce4-notifyd &

xsetroot -solid '#000000'
xsetroot -cursor_name left_ptr &

#keybindings are in config of sxhkd - interchangeable with other TWM
sxhkd -c ~/.config/herbstluftwm/sxhkd/sxhkdrc &


nm-applet &
pamac-tray &
xfce4-power-manager &
numlockx on &
blueberry-tray &
run volumeicon &
wal -R &
indicator-stickynotes &
/usr/bin/emacs --daemon &
dunst &
mopidy &


